<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<head>
<script language="JavaScript1.8" type="text/javascript"> <!--
    pageModDate = "31 March 2013 22:52 PDT";
    // by P.B. Stark, statistics.berkeley.edu/~stark
    // Copyright 2000-2013. All rights reserved.
// -->
</script>

<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js"></script>
<script type="text/javascript" src="http://code.jquery.com/ui/1.9.2/jquery-ui.js"></script>
<link href="http://code.jquery.com/ui/1.9.2/themes/base/jquery-ui.css" rel="stylesheet" type="text/css" />
<script type="text/javascript" src="http://d3js.org/d3.v2.js"></script>
<script type="text/javascript" src="../../Java/Jquery/Current/jquery.bullseye-1.0.min.js"></script>
<script src="http://crypto-js.googlecode.com/svn/tags/3.1/build/rollups/sha256.js"></script>



<script type="text/javascript" src="../../Java/sticigui.js"></script>
<link href="../../Java/CSS/sticigui.css" rel="stylesheet" type="text/css" />
<script language="JavaScript1.8" type="text/javascript" src="../../Java/irGrade.js"></script>

<script language="JavaScript1.8" type="text/javascript" ><!--
    window.name="bookWin";
    CA = true;
    var ver = 479; //
    examSetUp(ver, 'Final', 4);
// -->
</script>

</head>

<body >
<script language="JavaScript1.8" type="text/javascript"><!--
    var CA = true;
// -->
</script>


<ul>
<li>
    Write your name, student ID number, and the exam version on your Scantron form.
</li>
<li>
    Scantron forms without a student ID number or without an exam version number will not be
    graded&mdash;you will receive an F on the final (and fail the course) if you omit either.
</li>
<li>
    Write your name and SID on this exam.
</li>
<li>
    Return this exam with your Scantron form.
</li>
<li>
    Sign the form to confirm &quot;I swear I did not cheat on this exam, nor did I help
    anyone else to cheat.&quot;
</li>
</ul>


<!-- ==================================START PROBLEM==================================== -->

<div class="problem">
<script language="JavaScript1.8" type="text/javascript"><!--
    document.writeln(startProblem(pCtr++));
    var  qStr = '<span class="qSpan">Which informal fallacy&mdash;if any&mdash;does the following ' +
                'argument commit?</span></p><p><span class="example">';
    var vstatements = [
                        'In a telephone survey conducted by dialing at random, there is no ' +
                           'reason to think that non-responders differ from responders. ' +
                           'Therefore, it is reasonable to conclude that nonresponse does not bias the survey.',
                        'A particular wireless service provider\'s costs have risen by about $10 per ' +
                           'month for each additional customer.  Therefore, if a customer cancels service, the ' +
                           'wireless service provider will save about $10 per month.',
                        'Smoking is responsible for millions of avoidable deaths per year.  Therefore, ' +
                           'if a tobacco company is sued for any reason, the company should lose.',
                        'The United States has one of the highest infant mortality rates among developed ' +
                           'countries, while developed countries with socialized medicine have some of ' +
                           'the lowest infant mortality rates.  Therefore, if the U.S. switches to single-payer ' +
                           'healthcare, infant mortality in the U.S. will decrease.'
                      ];
     var rawOpt = ['appeal to ignorance',
                   'questionable cause',
                   'false dichotomy',
                   'two wrongs make a right'
                  ];
     var which = listOfRandInts(1, 0, vstatements.length-1)[0];
     qStr += vstatements[which] + '</span></p><p>';
     document.writeln(qStr);
     var optPerm = randPermutation(rawOpt,"inverse");
     var opt = optPerm[0];
     opt[opt.length] = "none of the above";
     var aVal;
     switch (which) {
         case 0:
           aVal = alphabet[optPerm[1][0]];
           break;
         case 1:
           aVal = alphabet[optPerm[1][1]];
           break;
         case 2:
           aVal = alphabet[optPerm[1][3]];
           break;
         case 3:
           aVal = alphabet[optPerm[1][1]];
           break;
     }
     writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</div>


<!-- ==================================START PROBLEM==================================== -->
<div class="problem">
<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var qStr = '<span class="qSpan">Is the following argument valid or fallacious?</span></p>' +
               '<p><span class="example">';
    var vstatements = [
                        ['A. Therefore, not (not A).',
                           'This is the definition of &quot;not.&quot;'],
                       ['A. B. Therefore, A and B.',
                           'This is the definition of &quot;and.&quot;'],
                       ['B. Therefore, A or B.',
                           '<span class="math">A or B</span> is true if <span class="math">A</span> is true, ' +
                           'if <span class="math">B</span> is true and if both <span class="math">A</span> ' +
                           ' and <span class="math">B</span> are true.'],
                       ['A or B. Not B. Therefore, A.',
                           'If either <span class="math">A</span> or <span class="math">B</span> is true, and ' +
                           '<span class="math">B</span> is not true, <span class="math">A</span> must ' +
                           'be true.'],
                       ['If A then B. A. Therefore, B.',
                           'This is <a class="glossRef" href="gloss.htm#affirming_the_antecedent">affirming ' +
                           'the antecedent</a>.'],
                       ['If A then B. Not B. Therefore, not A.',,
                           'This is <a class="glossRef" href="gloss.htm#denying_the_consequent">denying ' +
                           'the consequent</a>.'],
                       ['not (A or B).  Therefore, (not A) and (not B)',
                           'This is an application of one of ' +
                           '<a class="glossRef" href="gloss.htm#de_morgan">de Morgan\'s laws</a>.'],
                       ['not (A or B).  Therefore, (not A) or (not B)',
                           'By one of ' +
                           '<a class="glossRef" href="gloss.htm#de_morgan">de Morgan\'s laws</a>, if ' +
                           '<span class="math">not (A or B)</span>, ' +
                           'then <span class="math">A</span> is false and <span class="math">B</span> ' +
                           'is false. But if both <span class="math">A</span> and ' +
                           '<span class="math">B</span> are false, then either <span class="math">A</span> ' +
                           'is false or <span class="math">B</span> is false.'],
                       ['not (A and B).  Therefore, (not A) or (not B)',
                           'This is an application of one of ' +
                           '<a class="glossRef" href="gloss.htm#de_morgan">de Morgan\'s laws</a>.'],
                       ['A or not B.  B. Therefore, A.',
                           'This is the definition of &quot;or&quot; applied to <span class="math">A</span> ' +
                           'and <span class="math">not B</span>.  If either <span class="math">A</span> is ' +
                           'true or <span class="math">B</span> is false, and <span class="math">B</span> ' +
                           'is true, then <span class="math">A</span> must be false.']
                      ];
    var fstatements = [
                       ['A or B.  A.  Therefore, not B.',
                           '<span class="math">A or B</span> is true with either <span class="math">A</span>, ' +
                           '<span class="math">B</span> or both are true.  So, both <span class="math">A</span> ' +
                           'and <span class="math">B</span> could be true, and it does not follow that ' +
                           '<span class="math">B</span> is false.'],
                       ['A or B.  B.  Therefore, not A.',
                           '<span class="math">A or B</span> is true with either <span class="math">A</span>, ' +
                           '<span class="math">B</span> or both are true.  So, both <span class="math">A</span> ' +
                           'and <span class="math">B</span> could be true, and it does not follow that ' +
                           '<span class="math">A</span> is false.'],
                       ['not (A and B). Therefore, not B.',
                           '<span class="math">A and B</span> is false when either <span class="math">A</span>, ' +
                           '<span class="math">B</span>, or both are false.  So, <span class="math">B</span> ' +
                           'might be true and <span class="math">A</span> might be false. It does not follow that ' +
                           '<span class="math">B</span> is false.'],
                       ['not (A and B). Therefore, not A.',
                           '<span class="math">A and B</span> is false when either <span class="math">A</span>, ' +
                           '<span class="math">B</span>, or both are false.  So, <span class="math">A</span> ' +
                           'might be true and <span class="math">B</span> might be false. It does not follow that ' +
                           '<span class="math">A</span> is false.'],
                       ['If A then B. Not A. Therefore, not B.',
                           'This is an example of <a class="glossRef" href="gloss.htm#denying_the_antecedent">' +
                           'denying the antecedent</a>.'],
                       ['If A then B. Not B. Therefore, A.',
                           'By <a class="glossRef" href="gloss.htm#denying_the_consequent">denying the ' +
                           'consequent</a>, we can conclude that <span class="math">A</span> is false, not that ' +
                           '<span class="math">A</span> is true.'],
                       ['If A then B. B. Therefore, A.',
                           'This is an example of <a class="glossRef" href="gloss.htm#affirming_the_consequent">' +
                           'affirming the consequent</a>.'],
                       ['not (A and B). Therefore, (not A) and (not B)',
                           'It follows that either <span class="math">A</span> is false or ' +
                           '<span class="math">B</span> is false, but not necessarily that both are false.'],
                       ['If A then B. C. Therefore, A.',
                           'This is a <a class="glossRef" href="non_sequitur_of_evidence">non sequitur of ' +
                           'evidence</a>.'],
                       ['If A then B. A. Therefore, C.',
                           'This is a <a class="glossRef" href="non_sequitur_of_relevance">non sequitur of ' +
                           'relevance</a>.']
                      ];
    var which = randBoolean();
    var opt = ['fallacious','valid'];
    var stmt;
    if (which) {
         stmt = vstatements[listOfRandInts(1,0,vstatements.length-1)[0]][0];
         aVal = alphabet[1];
    } else {
         stmt = fstatements[listOfRandInts(1,0,fstatements.length-1)[0]][0];
         aVal = alphabet[0];
    }
    qStr += stmt + '</span></p><p>';
    document.writeln(qStr);
    writeRadioExercise(qCtr++, opt, aVal);
// -->
</script>
</p>
</div>

<!-- ==================================START PROBLEM==================================== -->

<div class="problem">
<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    var qStr = 'In the game Yahtzee, players roll five dice. There are 13 rounds per game. ' +
               'In each round, each player can roll the dice up to three times. In a player\'s first roll ' +
               'of each round, he or she rolls all five dice. The second and third rolls, ' +
               'the player can choose to roll any subset of the dice again (any or all the dice).</p> ' +
               '<p>Yahtzee is a bit like poker with dice.  An especially valuable roll is 5 of a kind ' +
               '(all 5 dice show the same number of spots), called a <em>Yahtzee</em>.  ' +
               'The next two questions are about Yahtzee.';
    document.writeln(qStr);
// -->
</script>
</p>

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    qStr = '<span class="qSpan">The chance of rolling a <em>Yahtzee</em> (5 of a kind) ' +
           'on the first roll of a turn is closest to</span></p><p>';
    var pY = Math.pow(1/6,4);
    var facs = listOfRandInts(2, 2, 5);
    var op = makeProbOptions(pY,pY/facs[0],pY*facs[1],3,20);
    var opt = op[0];
    var aVal = op[1];
    document.writeln(qStr);
    writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var hands = [
                  ['all five dice show different numbers', factorial(6)],
                  ['two dice show the same number and the rest show different numbers',
                           6*binomialCoef(5,2)*binomialCoef(5,3)*factorial(3)],
                  ['three dice show the same number and the rest show different numbers',
                           6*binomialCoef(5,3)*binomialCoef(5,2)*2],
                  ['four dice show the same number and the fifth shows a different number',
                           6*5*5]
                ];
    var which = listOfRandInts(1, 0, hands.length-1)[0];
    qStr = '<span class="qSpan">The chance that in the first roll of a turn, ' +
            hands[which][0] + ' is closest to</span></p><p>';
    var pY = hands[which][1]/Math.pow(6,5);
    var facs = listOfRandInts(2, 2, 5);
    var op = makeProbOptions(pY,pY/facs[0],Math.min(1,pY*facs[1]),3,20);
    var opt = op[0];
    var aVal = op[1];
    document.writeln(qStr);
    writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>
</div>


<!-- ==================================START PROBLEM==================================== -->

<div class="problem">
<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    var subsTries = listOfRandInts(3, 1, 4);
    var subs = 100*subsTries[0];
    var tries = 1000*subsTries[1];
    var thought = 10*subsTries[2];
    var qStr = 'A researcher is studying the beliefs of customers of a wireless telephone ' +
               'carrier. She wants to know whether, when they signed up for service, the ' +
               'customers believed that the recurring monthly charges were all they would ' +
               'have to pay, or whether they expected to pay taxes, surcharges, and fees for ' +
               'text messaging or usage above the plan limits. During the period in question, ' +
               'the carrier had about 10 million subscribers.</p>' +
               '<p>The researcher selects subscribers at random, without replacement, from the ' +
               'carrier\'s billing records, one by one, and calls them.  If she does not reach ' +
               'a subscriber on the first attempt, she tries back up to twice more, at different ' +
               'times of day, then moves on to the next randomly-selected subscriber. ' +
               'She keeps calling until she reaches ' + subs.toString() +
               ' subscribers, which required trying to reach ' + commify(tries) +
               ' subscribers.  Of the subscribers she reaches, ' + thought.toString() +
               ' did not expect to have to pay anything but the recurring monthly charge.</p>' +
               '<p>The next two questions refer to this scenario.</p>';
    document.writeln(qStr);
// -->
</script>

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var qStr = '<span class="qSpan">The sample percentage of subscribers who did not expect ' +
               'to have to pay anything but the recurring monthly charges is closest to</span></p><p>';
    document.writeln(qStr);
    var facs = listOfRandInts(2, 2, 5);
    var phi = 100*thought/subs;
    var op = makeRangeOptions(phi,phi/facs[0],phi*facs[1],0, 100, 2,'%', 20);
    var opt = op[0];
    var aVal = op[1];
    writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var qStr = '<span class="qSpan">A conservative 95% confidence interval for the population percentage ' +
               'of subscribers who did not expect to have to pay anything but the recurring monthly ' +
               'charges should go down and up from the sample percentage by</span></p><p>';
    document.writeln(qStr);
    var normApprox = 100*2*Math.sqrt((thought/subs) * (1 - thought/subs)/subs);
    var normApprox2 = 100*1.96*Math.sqrt((thought/subs) * (1 - thought/subs)/subs);
    var cheby = 100*20*(1/2)/Math.sqrt(subs);
    var cheby2 = 100*20*Math.sqrt((thought/subs) * (1 - thought/subs)/subs);
    var rawOpt = [roundToDig(normApprox,2) + '%',
                  roundToDig(normApprox2,2) + '%',
                  roundToDig(cheby,2)  + '%',
                  roundToDig(cheby2,2) + '%'
                 ];
    var optPerm = randPermutation(rawOpt,"inverse");
    var opt = optPerm[0];
    opt[opt.length] = "none of the above";
    var aVal = alphabet[4];
    writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>
</div>


<!-- ==================================START PROBLEM==================================== -->
<div class="problem">
<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    var ns = (listOfDistinctRandInts(4,4,18)).sort(numberLessThan);
    var x = ns[0];
    var n = ns[1];
    var G = ns[2];
    var N = ns[3];
    if (n-x > N-G) {
        x = n-(N-G);
    }
    var Ex = n*G/N;
    var SEx = Math.sqrt( ((N-n)/(N-1)) * n * G/N * (N-G)/N);
    var px = binomialCoef(G,x)*binomialCoef(N-G,n-x)/binomialCoef(N,n);
    var qStr = ' A group of ' + cardinals[N] + ' students contains ' +
               cardinals[G] + ' business majors; the rest are liberal arts ' +
               'majors. A simple random sample of ' + cardinals[n] +
               ' students will be drawn from the group. Let <span class="math">X</span> denote the number of ' +
               'business majors in the sample.';
    document.writeln(qStr);
// -->
</script>
</p>

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var op = makeOptions(100*px,5*px,1,"%");
    var opt = op[0];
    var aVal = op[1];
    var qStr = '<span class="qSpan">The probability that <span class="math">X = ' + x.toString() +
               '</span> is closest to</span></p><p>';
    document.writeln(qStr);
    writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>

<!-- ==================================START PROBLEM==================================== -->

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var op = makeOptions(Ex,.03*Ex,4);
    var opt = op[0];
    var aVal = op[1];
    var qStr = '<span class="qSpan">The expected value of <span class="math">X</span> is closest to</span></p><p>';
    document.writeln(qStr);
    writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>

<!-- ==================================START PROBLEM==================================== -->

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var op = makeOptions(SEx,.03*SEx,4);
    var opt = op[0];
    var aVal = op[1];
    var qStr = '<span class="qSpan">The standard error of <span class="math">X</span> is closest to</span></p><p>';
    document.writeln(qStr);
    writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>
</div>


<!-- ==================================START PROBLEM==================================== -->

<div class="problem">
<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    var pAlt = .1*listOfRandInts(1,6,9)[0];
    var nTosses = listOfRandInts(1,5,10)[0];
    var thresh = Math.floor(0.8*nTosses);
    var alpha = 1 - binomialCdf(nTosses,0.5,thresh-1);
    var power = 1 - binomialCdf(nTosses,pAlt,thresh-1);
    var rawOpt = ["binomial",
                  "geometric",
                  "hypergeometric",
                  "negative binomial"
                 ];
    var optPerm = randPermutation(rawOpt,"inverse");
    var opt = optPerm[0];
    opt[opt.length] = "none of the above";
    var aVal = alphabet[optPerm[1][0]];
    var qStr = 'I wish to test the null hypothesis that a particular coin is fair ' +
               '(has chance 50% of landing heads), against the alternative hypothesis ' +
               'that the coin is biased in favor of heads. I will toss the coin ' +
               cardinals[nTosses] + ' times, independently, and reject the null ' +
               'hypothesis if the coin lands heads ' + cardinals[thresh] +
               ' or more times in the ' + cardinals[nTosses] + ' tosses. </p>' +
               '<p>The next few questions refer to this hypothesis testing problem.';
    document.writeln(qStr);
// -->
</script>
</p>

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var qStr = '<span class="qSpan">If the null hypothesis is true, the probability ' +
               'distribution of the number of heads is</span></p><p>';
    document.writeln(qStr);
    writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>

<!-- ==================================START PROBLEM==================================== -->

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var op = makeProbOptions(alpha,.1,.5);
    var opt = op[0];
    var aVal = op[1];
    var qStr = '<span class="qSpan">The significance level of this test is closest ' +
               'to</span></p><p>';
    document.writeln(qStr);
    writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>

<!-- ==================================START PROBLEM==================================== -->

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var lo, hi;
    if (power <= 0.5) {
        lo = 0.1;
        hi = 0.5;
    } else {
        lo = 0.5;
        hi = 0.9;
    }
    var op = makeProbOptions(power,lo,hi);
    var opt = op[0];
    var aVal = op[1];
    var qStr = '<span class="qSpan">The power of this test against the ' +
               'alternative hypothesis that the coin has chance ' +
               roundToDig(100*pAlt,0).toString() + '% of landing heads is ' +
               'closest to</span></p><p>';
    document.writeln(qStr);
    writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>
</div>



<!-- ================================= START PROBLEM =================================== -->
<div class="problem">
<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var qStr = 'A researcher wishes to determine the effect of dietary fat intake on ' +
               'serum (blood) cholesterol level. He takes random samples of 1,000 adults ' +
               'each from the populations of 80 countries, and makes a scatterplot of ' +
               'average serum cholesterol (milligrams per deciliter; mg/dl) versus average ' +
               'daily fat intake (in grams) for the countries (the scatterplot has ' +
               '80 points, one for each country). The scatterplot is roughly football-shaped. ' +
               'The correlation coefficient between average daily fat intake and average serum cholesterol ' +
               'is 0.8. The regression line has slope 2 (2mg/dl of serum cholesterol ' +
               'per gram of fat per day).</p><p><span class="qSpan">' +
               'i) For the sample, people who consume one less gram of fat per day than ' +
               'average have a serum cholesterol level about 2mg/dl less than average.</span></p>' +
               '<p><span class="qSpan">' +
               'ii) An adult should expect that for each gram of fat he eliminates ' +
               'from his daily diet, his serum cholesterol level will fall by about ' +
               '2 mg/dl.</span></p><p><span class="qSpan">' +
               'iii) Because of ecological correlation, this study has little bearing ' +
               'on the effect of dietary fat on serum cholesterol for individuals.</span></p><p><span class="qSpan">' +
               'iv) Because this is an observational study, one should not infer a ' +
               'causal relationship between dietary fat intake and serum cholesterol ' +
               'level from the observed association.</span></p><p>';
    document.writeln(qStr);
    var aVal = "e";
    var opt = ["All are true.",
               "(i), (ii), and (iv) are true; (iii) is false.",
               "(ii) and (iv) are true; (i) and (iii) are false.",
               "(i) and (iv) are true; (ii) and (iii) are false.",
               "(iii) and (iv) are true; (i) and (ii) are false."
              ];
    writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>
</div>


<!-- ==================================START PROBLEM==================================== -->
<div class="problem">
<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var rawOpt = ["An innocent person is tried for a crime",
                  "An innocent person is found guilty of a crime",
                  "The wrong person is tried for a crime",
                  "The person guilty of a crime is found innocent",
                  "The person guilty of a crime is not prosecuted"
                 ];
    var optPerm = randPermutation(rawOpt,"inverse");
    var opt = optPerm[0];
    var aVal = alphabet[optPerm[1][1]];
    var qStr = 'In our legal system, a person is innocent until proven guilty.</p>' +
               '<p><span class="qSpan">In a criminal trial, a type I error occurs if' +
               '</span></p><p>';
    document.writeln(qStr);
    writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>
</div>

<!-- ==================================START PROBLEM==================================== -->
<div class="problem">
<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var possRs = [-0.95, -0.5, 0, 0.5, 0.95];
    var rInx = listOfRandInts(1,0,4)[0];
    var r1 = possRs[rInx];
    var opt = new Array(possRs.length);
    for (var i=0; i < possRs.length; i++ ) {
       opt[i] = roundToDig(possRs[i],2).toString();
    }
    var aVal = alphabet[rInx];
    var nPoints = 50*listOfRandInts(1,1,4)[0];
    var qStr = 'The following scatterplot contains ' + nPoints.toString() + ' points.</p><p>' +
               '<span class="qSpan">The correlation coefficient of the two variables is ' +
               'closest to</span></p><p>';
    document.writeln(qStr);
    writeRadioExercise(qCtr++,opt,aVal);
//
    var points1 = nPoints;
    var title1 = 'Correlation: Problem ' +  (pCtr-1).toString();
    jQuery(function() {
      new Stici_Scatterplot('chart1', {
        addPoints: false,
        graphAveButton: false,
        n: points1,
        r: r1,
        regressButton: false,
        sdButton: false,
        residualsButton: false,
        sdLineButton: false,
        showR: false,
        title: title1
      });
    });
// -->
</script>
</p>

<div class="figure">
<p class="figure">
<div id="chart1" class="scatterplot"></div>
</p>
</div>

</div>



<!-- ==================================START PROBLEM==================================== -->
<div class="problem">
<script language="JavaScript1.8" type="text/javascript" src="../../Java/p6-1990.js"></script>
<script language="JavaScript1.8" type="text/javascript" ><!--
// for census data questions
    var headInx = (listOfDistinctRandInts(2,0,headList.length-1)).sort(numberLessThan);
    var header = [headList[headInx[0]],headList[headInx[1]]];
    var nStat = 8;
    var indices = listOfDistinctRandInts(nStat,0,popData.length-1);
    var popXList = new Array(nStat);
    var sortPopXList = new Array(nStat);
    var popYList = new Array(nStat);
    var sortPopYList = new Array(nStat);
    for (i = 0; i < nStat; i++) {
        popXList[i] = roundToDig(popData[indices[i]][headInx[0]],3);
        sortPopXList[i] = popXList[i];
        popYList[i] = roundToDig(popData[indices[i]][headInx[1]],3);
        sortPopYList[i] = popYList[i];
    }
    sortPopXList.sort(numberLessThan);
    sortPopYList.sort(numberLessThan);
    var pctilePerm = distinctRandPermutation(nStat); // [2,3,0,8,7,1,5,9,4,6]; permutation of the sorted data list
    for (var i=0; i < sortPopXList.length; i++ ) {
        popXList[i] = sortPopXList[pctilePerm[i]];
        popYList[i] = sortPopYList[pctilePerm[i]];
    }
    var allXData = new Array(51); // array to hold all the X data
    var allYData = new Array(51); // array to hold all the Y data
    for (var i=0; i < 51; i++) {
        allXData[i] = popData[i][headInx[0]];
        allYData[i] = popData[i][headInx[1]];
    }
    var aveAllX = roundToDig(mean(allXData),3);
    var sdAllX = roundToDig(sd(allXData),3);
    var aveAllY = roundToDig(mean(allYData),3);
    var avePopX = mean(popXList);
    var avePopY = mean(popYList);
    var sdPopX = sd(popXList);
    var sdPopY = sd(popYList);
    var popR = corr(popXList,popYList);
    var fac1 = Math.round(7*rand.next()-3.5);
    var fac2 = Math.round(7*rand.next()-3.5);
    var n = 5;
    var XPredPop = avePopX + fac2*sdPopX*popR;
    var YPredPop = avePopY + fac1*sdPopY*popR;
    var YpredPop2 = avePopY + fac2*sdPopY;
    var popXMnMx = vMinMax(popXList);
    var popYMnMx = vMinMax(popYList);
    var lists = [popXList,popYList];
// -->
</script>

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    var qStr = 'Here is a table of bivariate data, 1990 U.S. Census estimates of the ' +
               explain[headInx[0]] + ', abbreviated by ' + header[0] + ', and ' +
               explain[headInx[1]] + ', abbreviated by ' + header[1] +
               ', in a simple random sample of size ' + nStat.toString() +
               ' from the 50 states and the District of Columbia. ' +
               'The next several questions refer to these data:</p>';
    document.writeln(qStr);
    listToTable(header,lists,"standard","center",true,"-1");
// -->
</script>
</p>

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var qStr = '<span class="qSpan">The lower quartile (in 1000s of people) of ' +
               header[0] + ' for these ' + nStat.toString() + ' states is closest to</span></p><p>';
    document.writeln(qStr);
    var lqi = Math.ceil(0.25*nStat) - 1;
    var rawOpt = [
                    (roundToDig(popXList[lqi-1],3)).toString(),
                    (roundToDig((popXList[lqi-1] + popXList[lqi])/2,3)).toString(),
                    (roundToDig(sortPopXList[lqi-1],3)).toString(),
                    (roundToDig(sortPopXList[lqi],3)).toString(),
                    (roundToDig((sortPopXList[lqi-1] + sortPopXList[lqi])/2,3)).toString()
                 ];
    var optPerm = randPermutation(rawOpt,'inverse');
    var opt = optPerm[0];
    var aVal = alphabet[optPerm[1][3]];
    writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var theInts = listOfRandInts(2,1,9);
    var thePctile = 10*theInts[0]+theInts[1];
    frac = thePctile*nStat/100;
    pctili = Math.ceil(frac)-1;
    pctToNext = frac - pctili;
    var qStr = '<span class="qSpan">The ' + ordinals[thePctile] + ' percentile of the ' +
               nStat.toString() + ' values of ' + header[0] + ' is closest to </span></p><p>';
    document.writeln(qStr);
    var rawOpt = [
                   (roundToDig(sortPopXList[pctili],3)).toString(),
                   (roundToDig(popXList[pctili],3)).toString(),
                   (roundToDig(sortPopXList[pctili-1] +
                       pctToNext*(sortPopXList[pctili]-sortPopXList[pctili-1]),3)).toString(),
                   (roundToDig(sortPopXList[pctili] +
                       pctToNext*(sortPopXList[pctili+1]-sortPopXList[pctili]),3)).toString(),
                   (roundToDig(popXList[pctili-1] +
                       pctToNext*(popXList[pctili]-popXList[pctili-1]),3)).toString(),
         ];
    var optPerm = randPermutation(rawOpt,'inverse');
    var opt = optPerm[0];
    var aVal = alphabet[optPerm[1][0]];
    writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var qStr = '<span class="qSpan">The median of these ' + nStat.toString() + ' values of ' +
               header[0] + ' is closest to </span></p><p>';
    document.writeln(qStr);
    var medi = Math.ceil(0.5*nStat)-1;
    var rawOpt = [(roundToDig(popXList[medi],3)).toString(),
                  (roundToDig((popXList[medi] + popXList[medi-1])/2,3)).toString(),
                  (roundToDig(sortPopXList[medi],3)).toString(),
                  (roundToDig(sortPopXList[medi-1],3)).toString(),
                  (roundToDig((sortPopXList[medi] + sortPopXList[medi-1])/2,3)).toString()
                 ];
    var optPerm = randPermutation(rawOpt,'inverse');
    var opt = optPerm[0];
    var aVal = alphabet[optPerm[1][2]];
    writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var qStr = '<span class="qSpan">The IQR of these ' + nStat.toString() + ' values of ' + header[0] +
               ' is closest to </span></p><p>';
    document.writeln(qStr);
    var uqi = Math.ceil(0.75*nStat) - 1;
    var lqi = Math.ceil(0.25*nStat) - 1;
    var uno = roundToDig((sortPopXList[uqi] - sortPopXList[lqi]),3);
    var dos = roundToDig((popXList[uqi] - popXList[lqi]),3);
    var tres = roundToDig(sortPopXList[lqi],3) + " to " + roundToDig(sortPopXList[uqi],3);
    var quatro =roundToDig(sortPopXList[lqi-1],3) + " to " + roundToDig(sortPopXList[uqi+1],3);
    var cinco = roundToDig((sortPopXList[uqi] - sortPopXList[lqi-1]),3);
    var rawOpt = [uno.toString(),dos.toString(),
        tres.toString(),quatro.toString(),
        cinco.toString()];
    var optPerm = randPermutation(rawOpt,'inverse');
    var opt = optPerm[0];
    var aVal = alphabet[optPerm[1][0]];
    writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var nBins = 5;
    var pct = 0;
    while(pct == 0) {
        var theInt = (listOfDistinctRandInts(2,1,nBins-1)).sort(numberLessThan);
        var loLim = roundToDig(popXMnMx[0]*0.9,0);
        var hiLim =  roundToDig(popXMnMx[1]*1.1,0);
        var dLim = (hiLim - loLim)/(nBins-1);
        var limits = [roundToDig(loLim + theInt[0]*dLim,0),
                      roundToDig(loLim + theInt[1]*dLim,0)
                     ];
        var count = 0;
        for (i=0; i < nStat; i++) {
            if (limits[0] < popXList[i] && popXList[i] <= limits[1]) {
                count++;
            }
        }
        pct = count*100/nStat;
    }
    var qStr = '<span class="qSpan">In a relative frequency table for the ' + nStat.toString() +
               ' values of ' + header[0] + ', the entry for the class interval ' +
               (limits[0]).toString() + ' (exclusive) to ' + (limits[1]).toString() +
               ' (inclusive) is closest to</span></p><p>';
    document.writeln(qStr);
    var rs = listOfRandSigns(2);
    var oneAns = pct + rs[1]*10;
    var anotherAns = count+rs[0];
    if (oneAns <= 0) {oneAns = pct - rs[1]*10;}
    if (anotherAns <= 0) {anotherAns = count - rs[0];}
    var rawOpt = [count.toString(),
                 (roundToDig(anotherAns,1)).toString(),
                 (roundToDig(pct,1)).toString() + "%",
                 (roundToDig(oneAns,1)).toString() + "%",
                 (roundToDig(pct,1)).toString() + "% per person"
              ];
    var optPerm = randPermutation(rawOpt,'inverse');
    var opt = optPerm[0];
    var aVal = alphabet[optPerm[1][2]];
    writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var count = 0;
    for (i=0; i < nStat; i++) {
        if (limits[0] < popXList[i] && popXList[i] <= limits[1]) {
            count++;
        }
    }
    pct = count*100/nStat;
    var qStr = '<span class="qSpan">In a histogram for the ' + nStat.toString() + ' values of ' +
               header[0] + ', the height of the bin for the class interval ' +
               (limits[0]).toString() + ' (exclusive) to ' +
               (limits[1]).toString() + ' (inclusive) would be closest to</span></p><p>';
    document.writeln(qStr);
    var binHt = pct/(limits[1]-limits[0]);
    var bhStr = (roundToDig(binHt,4)).toString();
    var pctStr = (roundToDig(pct,4)).toString();
    var rawOpt = [
              pctStr + "% per person",
              bhStr + "% per person",
              pctStr + "%",
              pctStr + "% per 1000 people",
              bhStr + "% per 1000 people"
              ];
    var optPerm = randPermutation(rawOpt,'inverse');
    var opt = optPerm[0];
    var aVal = alphabet[optPerm[1][4]];
    writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var rAns = listOfDistinctRandInts(8,-5,5);
    rAns[8] = 0;
    rAns[9] = 0;
    var rPert = new Array(2);
    rPert[0] = new Array(5);
    rPert[1] = new Array(5);
    for (i=0; i < 5; i++) {
      rPert[0][i] = rAns[2*i];
      rPert[1][i] = rAns[2*i+1];
    }
    var perm = listOfDistinctRandInts(5,0,4);
    var opt = [ "(" + (roundToDig(avePopX + rPert[0][perm[0]],3)).toString() + ", " +
        (roundToDig(avePopY + rPert[1][perm[0]],3)).toString() + ")",
        "(" + (roundToDig(avePopX + rPert[0][perm[1]],3)).toString() + ", " +
        (roundToDig(avePopY + rPert[1][perm[1]],3)).toString() + ")",
        "(" + (roundToDig(avePopX + rPert[0][perm[2]],3)).toString() + ", " +
        (roundToDig(avePopY + rPert[1][perm[2]],3)).toString() + ")",
        "(" + (roundToDig(avePopX + rPert[0][perm[3]],3)).toString() + ", " +
        (roundToDig(avePopY + rPert[1][perm[3]],3)).toString() + ")",
        "(" + (roundToDig(avePopX + rPert[0][perm[4]],3)).toString() + ", " +
        (roundToDig(avePopY + rPert[1][perm[4]],3)).toString() + ")"];
    var aVal = '';
    for (i=0; i<n; i++){
        if (rPert[0][perm[i]] == 0 && rPert[1][perm[i]] == 0) {
            aVal = alphabet[i];
        }
    }
    var qStr = '<span class="qSpan">The point of averages of these data (for ' +
               header[0] + ' on the X axis and ' + header[1] + ' on the Y axis) ' +
               'is closest to</span></p><p>';
    document.writeln(qStr);
    writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var ssr = 0;
    for (i=0; i < popXList.length; i++) {
        ssr += (popXList[i] - avePopX)*(popXList[i] - avePopX);
    }
    ssr /= popXList.length;
    op = makeOptions(ssr,.01*ssr,1);
    opt = op[0];
    aVal = op[1];
    var qStr = '<span class="qSpan">The SD of the list of ' + nStat.toString() + ' values of ' +
               header[0] + ' is closest to the square root of</span></p><p>';
    document.writeln(qStr);
    writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>.
</p>

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    var rAns = listOfDistinctRandInts(5,1,10);
    var rs = listOfRandSigns(5);
    var indMx = 0;
    var popYMx = popYList[0];
    for (i=1; i < n; i++) {
    if ( popYMx < popYList[i] ) {
        popYMx = popYList[i];
        indMx = i;
    }
    }
    stdYVal = (popYList[indMx] - avePopY)/sdPopY;
    var op = makeOptions(stdYVal,.1*stdYVal,2);
    var opt = op[0];
    var aVal = op[1];
    var qStr = 'The SD of ' + header[1] + ' is ' + roundToDig(sdPopY,3).toString() +
               '. In the following table, &quot;SU&quot; stands for &quot;standard ' +
               'units.&quot;</p>';
    document.writeln(qStr);
    var qStr = '<div align="center"><center><table border="2"><tr>' +
               '<td align="center">' + header[0] + '</td><td align="center">' +
               header[0] + ' in SU</td><td align="center">' + header[1] +
               '</td><td align="center">' +
               header[1] + ' in SU</td><td align="center">' + header[0] +
               ' in SU )&times;(' + header[1] + ' in SU)</td></tr>';
    document.writeln(qStr);
    var ccPopXY = 0.0;
    for (i = 0; i < nStat; i++) {
        var popXStd =  roundToDig((popXList[i] - avePopX)/sdPopX,2);
        var popYStd = roundToDig((popYList[i] - avePopY)/sdPopY,2);
        document.writeln("<tr>");
        document.writeln("<td align=\"right\">" + popXList[i]  +"</td>");
        document.writeln("<td align=\"right\">" + popXStd  +"</td>");
        document.writeln("<td align=\"right\">" + popYList[i]  +"</td>");
        prodXYSu = roundToDig(popXStd*popYStd,4);
        ccPopXY += prodXYSu;
        if (i == indMx) { // row with the question
            document.write("<td align=\"center\"><p align=\"center\">" +
                "Fill in this blank<br />for problem " + pCtr + "</p></td>");
        } else {
            document.writeln("<td align=\"right\">" + popYStd +
                          "</td><td align=\"right\">" + prodXYSu + "</td>");
        }
        document.writeln("</tr>");
    }
    ccPopXY /= n;
    var qStr = '</table></center></div>';
    document.writeln(qStr);
// -->
</script>

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var qStr = '<span class="qSpan">The missing value for ' + header[1] +
               ' in standard units is closest to</span></p><p>';
    document.writeln(qStr);
    writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var ans = linspace(-.8,.8,5);
    if ( (Math.abs(ccPopXY + 0.6) <= .05) ||
       (Math.abs(ccPopXY + 0.2) <= .05) ||
       (Math.abs(ccPopXY - 0.2) <= .05) ||
       (Math.abs(ccPopXY - 0.6) <= .05) ) {
       ans = linspace(-.9,.9,5);
    }
    var opt = new Array(ans.length);
    for (i=0; i < ans.length; i++) {
        opt[i] = (roundToDig(ans[i],2)).toString();
    }
    var mn = Math.abs(ccPopXY-ans[0]);
    var aVal = alphabet[0];
    var tr;
    for (i=1; i<5; i++){
        tr = Math.abs(ccPopXY-ans[i]);
        if (tr < mn){
            mn = tr;
            aVal = alphabet[i];
        }
    }
    var qStr = '<span class="qSpan">The correlation coefficient of ' +
               header[0] + ' and ' + header[1] + ' is closest to</span></p><p>';
    document.writeln(qStr);
    writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
      document.writeln(startProblem(pCtr++));
      var XFac = roundToDig(1 + 2 * (rand.next() + .5),1);
      var XPopLim = roundToDig(aveAllX + XFac * sdAllX,2);
      var XFac = (XPopLim - aveAllX)/sdAllX;
      var limit = roundToDig(Math.min(1.0/(XFac*XFac),aveAllX/XPopLim),2);
      var opt = ['1%',
                '10%',
                '25%',
                '50%',
                '75%'
                ];
      var aVal = '';
      if (limit <= 0.01) {
            aVal = alphabet[0];
      } else if (limit <= 0.1) {
            aVal = alphabet[1];
      } else if (limit <= 0.25) {
            aVal = alphabet[2];
      } else if (limit <= 0.5) {
            aVal = alphabet[3];
      } else if (limit <= 0.75) {
            aVal = alphabet[4];
      } else {
          alert('Error in problem ' + (pCtr-1).toString() + ': limit is ' + (100*limit).toString());
      }
      var qStr = 'The ' + nStat.toString() + ' observations of ' + header[0] + ' are a random sample from a ' +
                 'list of 51 numbers, one for each state and the District of Columbia. ' +
                 'The mean of the original list of 51 values of ' + header[0] +
                 ' is ' + aveAllX.toString() + ', and the SD of the 51 values is ' +
                 sdAllX.toString() + '. <span class="qSpan">The percentage of ' +
                 'numbers in the original list of 51 that are greater than or equal to ' + XPopLim +
                 ' cannot be bigger than (pick the smallest correct answer)</span></p><p>';
      document.writeln(qStr);
      writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>
</div>


<!-- ==================================START PROBLEM==================================== -->
<div class="problem">
<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var nr = (listOfDistinctRandInts(2,5,15)).sort(numberLessThan);
    if (nr[0] >= Math.ceil(nr[1]/2)) {
        aVal = "a";
    } else {
        aVal = "b";
    }
    var opt = ["false","true"];
    var qStr = 'A fair coin is tossed ' + cardinals[nr[1]]  +
               ' times, independently.  Let X be the number of times the coin lands ' +
               'heads in the first ' + cardinals[nr[0]] + ' tosses, and let Y be the ' +
               'number of times the coin lands tails in the last ' +
               cardinals[nr[0]] + ' tosses. ' + '</p><p><span class="qSpan">' +
               'X and Y are independent random variables.</span></p><p>';
    document.writeln(qStr);
    writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>
</div>

<!-- ==================================START PROBLEM==================================== -->
<div class="problem">
<p>
   The next two problems refer to a random variable <span class="math">X</span> with
    the following probability distribution:
</p>

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
   var nVals = 5;
   var theVals = listOfDistinctRandInts(nVals,0,3*nVals).sort(numberLessThan);
   var thePs = listOfRandInts(nVals,1,10);
   var totP = vSum(thePs);
   var meanX = 0;
   for (var i=0; i < thePs.length; i++) {
       thePs[i] = roundToDig(thePs[i]/totP,4);
       meanX += thePs[i]*theVals[i];
   }
   var header = ['<span class="math">x</span>','<span class="math">P(X=x)</span>'];
   var list = new Array(2);
   list[0] = theVals;
   list[1] = thePs;
   listToTable(header,list,"transpose","center",true) ;
// -->
</script>
</p>

<!-- ==================================START PROBLEM==================================== -->

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
   document.writeln(startProblem(pCtr++));
   var op = makeOptions(meanX,.05*meanX,3);
   var opt = op[0];
   var aVal = op[1];
   var qStr = '<span class="qSpan">The expected value of <span class="math">X</span> is closest to</span></p><p>';
   document.writeln(qStr);
   writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>

<!-- ==================================START PROBLEM==================================== -->

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
   document.writeln(startProblem(pCtr++));
   var seX = 0;
   for (var i=0; i < theVals.length; i++) {
       seX += (theVals[i] - meanX)*(theVals[i] - meanX)*thePs[i];
   }
   seX = Math.sqrt(seX);
   var op = makeOptions(seX,.05*seX,3);
   var opt = op[0];
   var aVal = op[1];
   var qStr = '<span class="qSpan">The standard error of <span class="math">X</span> is closest to</span></p><p>';
   document.writeln(qStr);
   writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>
</div>


<!-- ==================================START PROBLEM==================================== -->
<div class="problem">
<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
   var nTicks = listOfRandInts(1,2,5)[0];
   var nDraws = 20*listOfRandInts(1,5,10)[0];
   var theBox = listOfDistinctRandInts(nTicks,0,2*nTicks);
   for (var i=0; i< nTicks; i++) {
       theBox[i+nTicks] = -theBox[i];
   }
   theBox.sort(numberLessThan);
   nTicks = theBox.length;
   var boxMean = mean(theBox);
   var boxSd = sd(theBox);
   var limits = (listOfDistinctRandInts(2,1,3));
   var rs = listOfRandSigns(2);
   for (var i=0; i < rs.length; i++) {
       limits[i] = rs[i]*limits[i];
   }
   limits.sort(numberLessThan);
   var loLim = roundToDig(boxMean + limits[0]*boxSd*Math.sqrt(nDraws),2);
   var hiLim = roundToDig(boxMean + limits[1]*boxSd*Math.sqrt(nDraws),2);
   var pRange = normCdf(limits[1]) - normCdf(limits[0]);
   var posBox = new Array(theBox.length);
   var sqBox = new Array(theBox.length);
   for (var i=0; i < theBox.length; i++) {
       posBox[i] = Math.max(theBox[i],0);
       sqBox[i] = theBox[i]*theBox[i];
   }
   var posBoxMean = mean(posBox);
   var sqBoxMean = mean(sqBox);
   var posBoxSd = sd(posBox);
   var sqBoxSd = sd(sqBox);
   var which = randBoolean();
   var op = makeProbOptions(pRange,.1,.9);
   var opt = op[0];
   var aVal = op[1];
   var qStr = 'A box contains ' + cardinals[nTicks] + ' tickets labeled with the numbers ' +
              theBox.join(', ')   + '.</p><p>The next three problems concern drawing ' +
             'at random with replacement from this box of tickets.';
   document.writeln(qStr);
// -->
</script>
</p>

<!-- ==================================START PROBLEM==================================== -->

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var qStr = '<span class="qSpan">The normal approximation to the probability that ' +
               'the sum of the numbers on the tickets in ' + nDraws.toString() +
               ' random draws with replacement from this box is between ' +
               loLim.toString() + ' and ' + hiLim.toString() + ' is closest to</span></p><p>';
    document.writeln(qStr);
    writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>

<!-- ==================================START PROBLEM==================================== -->

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
   document.writeln(startProblem(pCtr++));
// -->
</script>
    <span class="qSpan">
    The expected value of the sum of the
<script language="JavaScript1.8" type="text/javascript" ><!--
   var which = randBoolean();
   var word;
   var a;
   if(which) {
       a = posBoxMean*nDraws;
       var op = makeOptions(a,.15*a,2);
       word = ' positive ';
   } else {
       a = sqBoxMean*nDraws;
       var op = makeOptions(a,.15*a,2);
       word = ' squares of the ';
   }
   var opt = op[0];
   var aVal = op[1];
   document.writeln( '<em>' + word + ' numbers</em> ');
// -->
</script>
    on the tickets drawn in
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln( nDraws.toString()  + " ");
// -->
</script>
    random draws with replacement from the box is closest to
    </span>
</p>

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>

<!-- ==================================START PROBLEM==================================== -->
<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var seSum;
    if (which) {
        seSum = posBoxSd*Math.sqrt(nDraws);
    } else {
        seSum = sqBoxSd*Math.sqrt(nDraws);
    }
    op = makeOptions(seSum,.1*seSum,2);
    var opt = op[0];
    var aVal = op[1];
// -->
</script>
<span class="qSpan">
    The standard error of the sum of the
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln( '<em>' + word   + ' numbers</em> ');
// -->
</script>
    on the tickets drawn in
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln( nDraws.toString()   + " ");
// -->
</script>
    random draws with replacement is closest to
</span>
</p>
<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>
</div>



<!-- ==================================START PROBLEM==================================== -->
<div class="problem">
<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    function f0(p, q) {
        return(( p || !q));
    }

    function f1(p, q) {
        return((p && q));
    }

    function f2(p, q) {
        return((p || !q));
    }

    function f3(p, q) {
        return( (p && q) );
    }

    var qOpt = [
                ["<em>p</em> <strong>OR</strong> (<em>q</em> <strong>IMPLIES</strong> <em>p</em>)",
                     f0],
                ["<em>p</em> <strong>AND</strong> (<em>p</em> <strong>IMPLIES</strong> <em>q</em>)",
                     f1],
                ["(<strong>NOT</strong> <em>p</em>) <strong>IMPLIES</strong> " +
                     "(<strong>NOT</strong> <em>q</em>)",
                     f2],
                ["<em>p</em> <strong>IFF</strong> (<em>p</em> <strong>IMPLIES</strong> <em>q</em>)",
                     f3]
                ];
    var which = (listOfRandInts(1,0, qOpt.length -1))[0];
    var p = randBoolean();
    var q = randBoolean()
    var qStr = '<span class="qSpan">When <em>p</em> is ' + p.toString() +
               ' and <em>q</em> is ' + q.toString() + ', ' + qOpt[which][0] +
               ' is</span></p><p>';
    document.writeln(qStr);
    var evalStr = qOpt[which][1] + '(' + p.toString() + ',' + q.toString() + ');';
    var tv = qOpt[which][1](p, q);
    var aVal = 'a';
    if (tv) {
        aVal = 'b';
    }
    var opt = ['false','true'];
    writeRadioExercise(qCtr++, opt, aVal);
// -->
</script>
</p>
</div>


<!-- ==================================START PROBLEM==================================== -->
<div class="problem">
<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    var qText = [
                'Take a simple random sample of 5 schools in the district.  ' +
                    'For each school in the sample, list the weights of every student. ' +
                    'Combine the lists and average the result.',
                'Take separate simple random samples of 3 elementary schools, 3 middle schools, ' +
                    'and 2 high schools.  For each school in the sample, list the weights of ' +
                    'all the students.  Combine the lists and average ' +
                    'the results.',
                'List all the students in the school district.  Average the weights of ' +
                    'every 50th student on the list.',
                'List all the students in the school district.  Average the weights ' +
                    'of the first 200 students on the list.',
                'List all the students in the school district.  Average the weights ' +
                    'of every 50th student in the district, starting with a student ' +
                    'selected at random from the first 50 students.',
                'Take a simple random sample of 5 schools in the district.  For each school ' +
                    'in the sample, list all the homerooms.  Take a simple random sample of ' +
                    '3 homerooms from each school in the sample.  For each homeroom ' +
                    'in the sample, list the students.  Take a simple random sample of 10 ' +
                    'students from each homeroom in the sample.  List their ' +
                    'weights. Combine the lists and average the results.',
                'Take a simple random sample of 5 schools in the district.  For each school ' +
                    'in the sample, list all the homerooms.  Take a simple random sample of ' +
                    '3 homerooms from each school in the sample.  For each homeroom ' +
                    'in the sample, list the weights of all the students. ' +
                    'Combine the lists and average the results.',
                'List all the schools in the school district.  For each school, list all the ' +
                    'teachers at the school; sort them alphabetically within each school.  ' +
                    'For each school, list the weights of the students of the teacher ' +
                    'who is first on that school\'s sorted teacher list. ' +
                    'Combine the lists and average the results.',
                'Write the names of all the students in the school district on identical ' +
                    'slips of paper. Put the slips of paper into a wastebasket.  ' +
                    'Stir up the slips thoroughly, then draw 100 slips successively without ' +
                    'looking at the slips.  Average the weights of the students whose ' +
                    'names are on the slips drawn.'
                ];
    var rawOpt = [
                  'a simple random sample',                          // 0
                  'a systematic random sample',                      // 1
                  'a stratified random sample',                      // 2
                  'a random cluster sample',                         // 3
                  'a random stratified cluster sample',              // 4
                  'a multistage random sample',                      // 5
                  'a multistage random cluster sample',              // 6
                  'a random stratified multistage cluster sample',   // 7
                  'a systematic sample',                             // 8
                  'another non-probability sample'                   // 9
                ];
    var aV = [
                3, //random cluster
                4, //random stratified cluster
                8, //systematic
                9, //not probability
                1, //systematic random
                5, //multistage random
                6, //multistage random cluster
                9, //non probability
                0 // simple random
              ];
    var tV = [
                1, //random cluster
                0, //random stratified cluster
                0, //systematic
                0, //not probability
                1, //systematic random
                0, //multistage random
                0, //multistage random cluster
                0, //non probability
                1  // simple random
              ];
    var which = listOfDistinctRandInts(2,0,qText.length-1);
    var opt2 = ['Probabilities undefined or not necessarily equal','Probabilities equal'];
    var qStr = 'The next four questions refer to the same sampling problem. ' +
               'Suppose we want to estimate the average weight of children ' +
               'in a particular school district. The district contains 15 elementary ' +
               'schools, 10 middle schools, and 2 high schools. For each of the following ' +
               'approaches, select the best description of the sampling design, and identify ' +
               'whether the sampling scheme ensures that the probability of being included ' +
               'is necessarily the same for every student.</p>';
    document.writeln(qStr);
    var aVal;
    for (var i=0; i < which.length; i++) {
        if (which[i] == 0) {
            opt = [rawOpt[1], rawOpt[3], rawOpt[4], rawOpt[5], rawOpt[8]];
            aVal = 'b';
        } else if (which[i] == 1) {
            opt = [rawOpt[0], rawOpt[2], rawOpt[3], rawOpt[4], rawOpt[6]];
            aVal = 'd';
        } else if (which[i] ==2 ) {
            opt = [rawOpt[0], rawOpt[2], rawOpt[1], rawOpt[8], rawOpt[9]];
            aVal = 'd';
        } else if (which[i] == 3) {
            opt = [rawOpt[0], rawOpt[2], rawOpt[1], rawOpt[8], rawOpt[9]];
            aVal = 'e';
        } else if (which[i] == 4) {
            opt = [rawOpt[1], rawOpt[3], rawOpt[4], rawOpt[5], rawOpt[8]];
            aVal = 'a';
        } else if (which[i] == 5) {
            opt = [rawOpt[1], rawOpt[3], rawOpt[4], rawOpt[5], rawOpt[6]];
            aVal = 'd';
        } else if (which[i] == 6) {
            opt = [rawOpt[1], rawOpt[3], rawOpt[4], rawOpt[5], rawOpt[6]];
            aVal = 'e';
        } else if (which[i] == 7) {
            opt = [rawOpt[0], rawOpt[2], rawOpt[1], rawOpt[8], rawOpt[9]];
            aVal = 'e';
        } else if (which[i] == 8) {
            opt = [rawOpt[0], rawOpt[2], rawOpt[1], rawOpt[4], rawOpt[8]];
            aVal = 'a';
        }
        document.writeln('<p>' + startProblem(pCtr++) + ' <span class="qSpan">' +
            qText[which[i]] + '</span></p><p>');
        writeRadioExercise(qCtr++,opt,aVal);
        document.writeln('<p>' + startProblem(pCtr++) + ' <span class="qSpan">' +
            qText[which[i]] + '</span></p><p>');
        writeRadioExercise(qCtr++,opt2,alphabet[tV[which[i]]]);
    }
// -->
</script>
</p>
</div>


<!-- ==================================START PROBLEM==================================== -->
<div class="problem">
<p align="center">
   <strong>The next three problems refer to the same artificial data set.
   </strong>
</p>

<!-- ==================================START PROBLEM==================================== -->

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
// Fake weight and height data. Take mean weight = 150#; mean height = 66". Slope 1"/5# = .2.
// ratio of SDs 6"/40# = .15
//
    var slope = 0.2;
    var htRg0 = 20;
    var aveWt0 = 150;
    var aveHt0 = 67;
    var sdRat = 0.15
    var pVals = listOfDistinctRandInts(2,0,1);
    if (pVals[0] != 0) {
        slope = 0;
    }
    var parms = [["polynomial", aveHt0, slope, 20*Math.abs(pVals[0])],
                1 + 4*Math.max(pVals[1],0), 10];
    var examplePoints = 100;
    var data6 = fakeBivariateData(examplePoints,parms[0],parms[1],parms[2], 0, 80);
    var htMnMx = vMinMax(data6[1]);
    var loHt = aveHt0 - htRg0/2;
    var htRg = htMnMx[1] - htMnMx[0];
    for (i=0; i < data6[0].length; i++) {
        data6[0][i] += aveWt0 - 40;
        data6[1][i] = loHt + (data6[1][i] - htMnMx[0])*htRg0/htRg;
    }
    var cc = roundToDig(corr(data6[0],data6[1]),2);
    var aveWt = roundToDig(mean(data6[0]),1);
    var aveHt = roundToDig(mean(data6[1]),1);
    var sdWt =  roundToDig(sd(data6[0]),1);
    var sdHt =  roundToDig(sd(data6[1]),1);
    var rmsResid = Math.sqrt(1-cc*cc)*sdHt;
    var qStr = 'The scatterplot below shows artificial data for the heights and weights ' +
               'of 100 individuals. The square is the point of averages. The average ' +
               'weight is ' + aveWt.toString() + ' lbs. with an SD of ' + sdWt.toString() +
               ' lbs., and the average height is ' + aveHt.toString() +
               ' in. with an SD of ' + sdHt.toString() + ' in. The correlation between ' +
               'height and weight is ' + cc.toString() + '.</p>';
    document.writeln(qStr);
//
    jQuery(function() {
      new Stici_Scatterplot('chart2', {
        addPoints: false,
        graphAveButton: false,
        x: data6[0],
        y: data6[1],
        regressButton: false,
        sdButton: false,
        residualsButton: false,
        sdLineButton: false,
        showR: false,
        title: "Faux Height/Weight Data"
      });
    });
// -->
</script>
</p>

<div class="figure">
<p class="figure">
<div id="chart2" class="scatterplot"></div>
</p>
</div>

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var wtFac = (listOfRandInts(1,-3,3))[0];
    if (wtFac == 0) {
        wtFac = 2;
    }
    var predWt = roundToDig(aveWt + wtFac*sdWt,1);
    var predHt = roundToDig(aveHt + wtFac*cc*sdHt,1);
    var pert = 0.05*predHt;
    var op = makeOptions(predHt,pert,1," in.");
    var opt = op[0];
    var aVal = op[1];
    var qStr = '<span class="qSpan">The regression line estimate of the height of an ' +
               'individual whose weight is ' + predWt.toString() +
               ' lbs. is closest to</span></p><p>';
    document.writeln(qStr);
    writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var qStr = '<span class="qSpan">The rms error of regression for regressing ' +
               'height against weight is closest to</span></p><p>';
    document.writeln(qStr);
    var coef = roundToDig(1-cc*cc,2);
    var smallDiff = Math.min(coef, 1-coef);
    if (smallDiff < 0.2) {
        smallDiff = 0.2;
    }
    var pert = 0.2*smallDiff;
    var rs = listOfRandSigns(4);
    var pertFac = listOfDistinctRandInts(4,1,5);
    var perts = new Array(4);
    for (var i=0; i < 4; i++) {
        perts[i] = roundToDig(coef+rs[i]*pertFac[i]*pert, 3);
        if (perts[i] < 0 || perts[i] > 1) {
            perts[i] = roundToDig(coef-rs[i]*pertFac[i]*pert, 3);
        }
    }
    var rawOpt = [
                   "(" + (roundToDig(coef,3)).toString() + ")<sup>&frac12;</sup>&times;" +
                       sdHt.toString() + " in.",
                   "(" + perts[0].toString() +
                       ")<sup>&frac12;</sup>&times;" + sdHt.toString() + " in.",
                   "(" + perts[1].toString() +
                       ")<sup>&frac12;</sup>&times;" + sdWt.toString() + " lbs.",
                   "(" + perts[2].toString() +
                       ")<sup>&frac12;</sup>&times;" + sdWt.toString() + " in.",
                   "(" + perts[3].toString() +
                       ")<sup>&frac12;</sup>&times;" + sdHt.toString() + " lbs."
                 ];
    var optPerm = randPermutation(rawOpt,'inverse');
    var opt = optPerm[0];
    var aVal = alphabet[optPerm[1][0]];
    writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>


<!-- ==================================START PROBLEM==================================== -->

<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var qStr = '<span class="qSpan">For this scatterplot, the regression line, together ' +
               'with the SDs of height and weight, summarize the data</span></p><p>';
    document.writeln(qStr);
    var opt = ["well",
                "poorly, because of outliers",
                "poorly, because of nonlinearity",
                "poorly, because of heteroscedasticity",
                "poorly, because the association is weak"
              ];
    var aVal = "";
    var none = true;
    if (pVals[0] != 0) {
        aVal += "c&";
        none = false;
    }
    if (pVals[1] > 0) {
        aVal += "d&";
        none = false;
    }
    if (none) {
        aVal += "a";
    }
    if (aVal.lastIndexOf('&') == aVal.length - 1) {
        aVal = aVal.substring(0, aVal.length - 1);
    }
    writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>
</div>



<!-- ==================================START PROBLEM==================================== -->
<div class="problem">
<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var randSign = rand.next();
      if (randSign > 0.5) {
          randSign = 1;
    } else {
        randSign = -1;
    }
    var parms = new Array(1);
    var examplePoints = 100;
    var pVals = listOfRandInts(5,-1,1);
    parms[0] = [["polynomial", 10*pVals[0], 5*pVals[1],
                    2*pVals[2], .3*pVals[3]], 1 + 5*Math.max(pVals[4],0),
                    1 + 4*Math.floor(rand.next()+0.5)];
    var data5 = fakeBivariateData(examplePoints,parms[0][0],parms[0][1],parms[0][2]);
    var yMean = mean(data5[1]);
    yMnMx = vMinMaxAbs(data5[1]);
      if (Math.abs(yMean) < 0.07*yMnMx[1] || pVals[0] == 0){
        for (i=0; i < data5[1].length; i++){
            data5[1][i] -= yMean;
        }
        yMean = 0.0;
    }
    var xyCorr = corr(data5[0],data5[1]);
    var opt = ["data show nonlinear association and homoscedasticity; " +
                      "regression computed correctly",
               "data show linear association and heteroscedasticity; " +
                      "regression computed correctly",
               "data show nonlinear association and heteroscedasticity; " +
                      "regression computed correctly",
               "regression is a good summary of the data",
               "none of the above"];
    var aVal = '';
    if ((Math.abs(yMean) > 0.01) || (Math.abs(xyCorr) > 0.05)) {
        aVal ='e';
    } else if ((pVals[2] != 0 || pVals[3] != 0) && pVals[4] == 0) {
        aVal ='a';
    } else if ((pVals[2] != 0 || pVals[3] != 0) && pVals[4] > 0) {
        aVal ='c';
    } else if (pVals[2] == 0 && pVals[3] == 0 && pVals[4] > 0) {
        aVal = 'b';
    } else {
        aVal = 'd';
    }
    var qStr = 'Below is a residual plot from a regression. The square is the point of ' +
               'averages of the residual plot. <span class="qSpan">What does the residual ' +
               'plot indicate about the the underlying data and the regression?</span></p><p>';
    document.writeln(qStr);
    writeRadioExercise(qCtr++,opt,aVal);
//
    jQuery(function() {
      new Stici_Scatterplot('chart3', {
        addPoints: false,
        graphAveButton: false,
        x: data5[0],
        y: data5[1],
        regressButton: false,
        sdButton: false,
        residualsButton: false,
        sdLineButton: false,
        showR: false,
        title: "Residual Plot"
      });
    });
// -->
</script>
</p>

<div class="figure">
<p class="figure">
<div id="chart3" class="scatterplot"></div>
</p>
</div>

</div>



<!-- ==================================START PROBLEM==================================== -->
<div class="problem">
<p>
<script language="JavaScript1.8" type="text/javascript" ><!--
    document.writeln(startProblem(pCtr++));
    var nTosses = 100*listOfRandInts(1,10,20)[0];
    var seWins = .5*Math.sqrt(nTosses);
    var nUp = listOfRandInts(1,Math.floor(seWins),2*Math.floor(seWins))[0];
    if (Math.ceil(nUp/2) - nUp/2 > 0) {
        nUp++;
    }
    var rawOpt = ['Because of the law of averages, the probability that your average ' +
                   'net winnings per game differs from 0 by more than 1&cent; ' +
                   'converges to zero.',
                 'Because of the square-root law, the SE of your winnings after ' +
                   (4*nTosses).toString() + ' tosses is half the SE of your winnings after ' +
                   nTosses.toString() + ' tosses.',
                 'Because of the normal approximation, the chance that either of us is ' +
                   'up or down by $' + nUp.toString() + ' or more eventually will be ' +
                   'less than 1%. ',
                 'Because of the law of large numbers, the number of times you win ' +
                   'is increasingly likely to be arbitrarily close to half the number ' +
                   'of times we play.'
                 ];
    var optPerm = randPermutation(rawOpt,"inverse");
    var opt = optPerm[0];
    opt[opt.length] = 'None of the above.';
    var aVal = alphabet[optPerm[1][0]];
    var qStr = 'We take turns tossing a fair coin, over and over.  When the coin lands heads, I ' +
               'win $1; when the coin lands tails, you win $1. After ' + nTosses.toString() +
               ' tosses, you are up by $' + nUp.toString() + '.</p><p>';
    document.writeln(qStr);
    writeRadioExercise(qCtr++,opt,aVal);
// -->
</script>
</p>
</div>

</form>


<script language="JavaScript1.8" type="text/javascript" ><!--
    writeMiscFooter(true);
// -->
</script>
</body>
</html>
